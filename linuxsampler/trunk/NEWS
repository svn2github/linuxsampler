Version 2.0.0 (15 July 2015)

  The sampler's code base has seen substantial changes in the last six years,
  since the last release of LinuxSampler. The sampler engine code base has
  been unified to a set of abstract base classes which cleared the way for
  two new sampler engines: The SFZ2 format engine (.sfz) and the SoundFont 2
  engine (.sf2). So LinuxSampler is not limited to the GigaStudio/Gigasampler
  format (.gig) anymore. Another major new feature is support for real-time
  instrument scripts, which may be bundled with sound files to extend the
  sampler with custom behavior for individual sounds. You may know such scripts
  from commercial software samplers. Find out more about instrument scripts
  on http://doc.linuxsampler.org/Instrument_Scripts/. At the moment this
  scripting feature is yet limited to the Giga format engine. Also noteworthy
  is the new command line application "lscp", which is a text based shell for
  controlling the sampler from the command line, providing colored output,
  type completion, help text while typing LSCP commands and other convenient
  features. You may now also load external effects directly into the sampler
  (only LADSPA plugins yet). The LSCP network protocol (v1.7) has been extended
  to manage such effects respectively. Also new with latest LSCP version is the
  ability to trigger MIDI CCs by LSCP commands. You may have heard that the
  GigaStudio software has seen its last version with GigaStudio 4. Tascam
  officially discontinued this product, its intellectual property has been sold
  several times among companies and there is currently no way to buy a new copy
  of GigaStudio anymore. However the GigaStudio format is still under active
  development with LinuxSampler. We not only added support for the latest
  features introduced with GigaStudio 4: iMIDI rules for example which allow to
  trigger notes by MIDI CC and allow i.e. defining a set of legato samples; for
  the first time ever we also added our own extensions to the Giga format: one
  of it is the previously mentioned new instrument scripting feature and a more
  minor extension is support for various other MIDI CCs which were never
  supported by GigaStudio before. The sampler's host plugins have also seen
  some enhancements: the LV2 plugin now stores and restores the sampler's
  overall state with your DAW application's song, the LV2 and AudioUnit
  plugin's outputs were increased from 2 audio channels to 16 upon request by
  some users and the VST plugin now uses the sampler's MIDI instrument mapping
  system to show a list of available sounds to allow the user to switch among
  them. And last but not least the VST plugin may also be used on Mac now.

Version 1.0.0 (31 July 2009)

  This is the first release which allows the sampler to be used as audio
  host plugin, namely supporting the standards VST, AU, DSSI and LV2. The
  sampler's limits for max. voices & disk streams can now be altered at
  runtime by frontends, no need to recompile the sampler anymore. The Mac
  version now also supports CoreAudio as audio driver. The Windows version
  finally supports the sampler's instruments DB feature as well, however
  expect it still to be unstable at this point. Along to the already
  existing JACK audio driver, Jack MIDI support has been added in this
  release. The sampler allows frontends now basic MIDI control, that is to
  monitor incoming MIDI data on MIDI input devices and sampler channels and
  to send note-on and note-off MIDI events to sampler channels, which
  allows frontends to provide a virtual MIDI keyboard to the user. Besides
  these major changes there were countless bugfixes and optimizations.

Version 0.5.1 (6 December 2007)

  This is the first release for the Windows platform, providing a MME MIDI
  input driver and ASIO audio output driver. Note that the instruments DB
  feature is not yet available for Windows systems, since the respective
  code base has yet to be ported. Needless to say that there still might be
  plenty of issues on MS systems. Beside that support for Windows, this is
  merely a bugfix release (i.e. fixing one serious crash) with only minor
  new features.

Version 0.5.0 (15 October 2007)

  This release comes with a bunch of important new features. We implemented
  a very powerful and easy MIDI program change mapping, which not only
  allows you to define which instrument to load on which MIDI program
  change number (and bank select number), it also allows further parameters
  like whether the instrument shall be pre-cached or loaded only when needed
  (and likewise freed when not needed). You can create arbitrary amount of
  effect sends for each sampler channel, each having an arbitrary MIDI
  controller for controlling the effect send level in realtime and can
  flexible be routed to some of the sampler's audio output channel, i.e.
  to a dedicated one for a certain effect type. The new instruments
  database allows you to keep track even of largest instrument library
  collections. You can order them in categories and search by various
  criteria. The sampler now allows third party applications to offer so
  called 'instrument editor plugins' which the sampler can use to spawn
  an appropriate instrument editor application for a selected instrument
  and for allowing to edit instruments with such an external editor
  application on-the-fly, that is all modifications made with the editor
  will immediately be audible with the sampler. No need to reload instrument
  files anymore. Checkout our brand new instrument editor application called
  'gigedit' which you can use for this feature. Loading huge instruments may
  take a long time, that's why the sampler now allows to play an instrument
  while loading. That way you can i.e. play and hold notes on the keyboard
  while loading a new instrument on the same sampler channel at the same
  time. Beside these new features, you can find the common huge list of bug
  fixes and quality improvements.

Version 0.4.0 (24 November 2006)

  Finally a new release after a long development cycle. The sampler now has
  a completely revised synthesis core. Note that due to this, most of the
  assembly code became incompatible and is thus deactivated at compile
  time. So don't bother trying to activate the assembly option, it won't
  compile! That's not an issue though, because even without assembly, the
  new synthesis core is faster than the old one with assembly. The
  Gigasampler engine now has real support for 24 bit samples, that is they
  won't be truncated anymore, and finally supports all filter types of the
  Gigasampler format. A lot of effort has been put into making all filters
  under all parameters being as accurate as possible, compared to the
  original Gigasampler ones. Analogue to hardware mixers, sampler channels
  can now be muted and solo-ed and there is support for GM portamento and
  GM mono mode (single note per channel) as well as support for sostenuto
  pedal. Beside LSCP, third-party applications can now also link against
  liblinuxsampler directly (using the sampler's C++ API). Beside these,
  there have been of course a huge bunch of fixes and quality improvements.

Version 0.3.3 (15 July 2005)

  Another bug fix release. It solves one usability issue regarding small
  fragments / high sampling rates of audio drivers, fixes some compile time
  errors with GCC 4.0 and fixes a minor efficiency bug.

Version 0.3.2 (24 June 2005)

  This is more or less just a bug fix release. Beside a bunch of little
  fixes it solves a serious crash in conjunction with voice stealing and
  slightly improves Gigasampler format playback accuracy.
